def hasCycle(self, head: Optional[ListNode]) -> bool:
      slow = head
      fast = head
      while fast is not None:
          if fast.next is not None:
              if fast.next == slow:
                  return(True)
              fast = fast.next.next
          else:
              return(False)
          if fast is None:
              return(False)
          
          if fast == slow:
              return(True)
          slow = slow.next
      return(False)
